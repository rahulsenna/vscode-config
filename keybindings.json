// Place your key bindings in this file to override the defaultsauto[]
[
    //--------------insert modes  --------------
    {
        "key": ".",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "editor.action.insertLineAfter",
        "when": "editorTextFocus && modal.normal" 
    },
    {
        "key": "ctrl+.",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "editor.action.insertLineBefore",
        "when": "editorTextFocus && modal.normal"    
    },
/*
    {
        "key": "shift+.",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "editor.action.insertLineBefore",
        "when": "editorTextFocus && modal.normal"    
    },
     {
        "key": ". i",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "editor.action.insertLineAfter",
        "when": "editorTextFocus && modal.normal"    
    },
    {
        "key": ". k",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "editor.action.insertLineBefore",
        "when": "editorTextFocus && modal.normal"
    },
    {
        "key": ". j",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "cursorLeft",
        "when": "editorTextFocus && modal.normal"
    },

    {
        "key": ". u",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "cursorHome",
        "when": "editorTextFocus && modal.normal"
    },

    {
        "key": ". o",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "cursorEnd",
        "when": "editorTextFocus && modal.normal"
    },


    {
        "key": ". l",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "cursorRight",
        "when": "editorTextFocus && modal.normal"
    },

    {
        "key": ". s",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "cursorWordPartRight",
        "when": "editorTextFocus && modal.normal"
    },

    {
        "key": ". a",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "cursorWordPartLeft",
        "when": "editorTextFocus && modal.normal"
    },

    {
        "key": ". f",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "cursorWordRight",
        "when": "editorTextFocus && modal.normal"
    }, 

    {
        "key": ". d",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "cursorWordLeft",
        "when": "editorTextFocus && modal.normal"
    },
*/

    //-----------------------
    {
        "key": "a z",
        "command": "redo",
        "when": "editorTextFocus && !editorReadonly && modal.normal"
    },
    {
        "key": "z",
        "command": "undo",
        "when": "editorTextFocus && !editorReadonly && modal.normal"
    },
    {
        "key": "a l",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus && modal.normal"
    },
    {
        "key": "a ;",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus && modal.normal"
    },
    {
        "key": "/",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "jump-and-select.jumpForward",
        // "args": "extension.jumpy-enter",
        "when": "editorTextFocus  && modal.normal"
    },
    {
        "key": "/",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "jump-and-select.jumpForwardSelect",
        // "args": "extension.jumpy-enter",
        "when": "editorTextFocus && modal.normal && modal.visual"
    },
    {
        "key": "a /",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "jump-and-select.jumpBackward",
        "when": "editorTextFocus  && modal.normal"
    },
    {
        "key": "a /",
        "command": "rahulvscodeplugin.command_and_insert",
        "args": "jump-and-select.jumpBackwardSelect",
        "when": "editorTextFocus  && modal.normal && modal.visual"
    },
    {
        "key": "a j",
        "command": "jump-and-select.redo",
        "when": "editorTextFocus  && modal.normal"
    },
    {
        "key": "[",
        "command": "jump-backwards",
        "when": "editorTextFocus && modal.normal"
    },
    {
        "key": "]",
        "command": "jump-forward",
        "when": "editorTextFocus && modal.normal"
    },

    {
        "key": "[",
        "command": "jump-backwards-selection",
        "when": "editorTextFocus && modal.normal && modal.visual"
    },
    {
        "key": "]",
        "command": "jump-forward-selection",
        "when": "editorTextFocus && modal.normal && modal.visual"
    },

    // {
    //     "key": "a i",
    //     "command": "editor.action.jumpToBracket",
    //     "when": "editorTextFocus && modal.normal"
    // },
    // {
    //     "key": "a k",
    //     "command": "editor.action.selectToBracket",
    //     "when": "editorTextFocus && modal.normal"
    // },
    {
        "key": "a [",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus && modal.normal"
    },
    {
        "key": "a ]",
        "command": "editor.action.selectToBracket",
        "when": "editorTextFocus && modal.normal"
    },
    
    {
        "key": "ctrl+alt+shift+up", // whatever keybinding you want
        "command": "cursorMove",
        "args": {
            "to": "prevBlankLine",
            "select": true
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+shift+down",
        "command": "cursorMove",
        "args": {
            "to": "nextBlankLine",
            "select": true
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+up", // whatever keybinding you want
        "command": "cursorMove",
        "args": {
            "to": "prevBlankLine",
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+down",
        "command": "cursorMove",
        "args": {
            "to": "nextBlankLine",
        },
        "when": "editorTextFocus"
    },
    // {
    //     "key": "ctrl+c ctrl+alt+5",
    //     "command": "workbench.action.moveEditorToNextGroup",
    // },
    // {
    //     "key": "ctrl+alt+shift+0",
    //     "command": "modaledit.enterInsert",
    //     // "when": "modaledit.normal"
    // },
    // {
    //     "key": "ctrl+alt+shift+9",
    //     "command": "modaledit.enterNormal",
    //     // "when": "modaledit.normal";
    // },
    {
        "key": "ctrl+alt+5",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+alt+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "`",
        "command": "workbench.action.toggleSidebarVisibility"
    },


    // {
    //     "key": "shift shift shift shift",
    //     "command": "workbench.action.gotoSymbol"
    // },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-editor.action.formatSelection",
    },
    {
        "key": "ctrl+shift+delete",
        "command": "deleteAllRight"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "deleteAllLeft"
    },
    {
        "key": "alt+backspace",
        "command": "deleteWordPartLeft"
    },
    {
        "key": "alt+delete",
        "command": "deleteWordPartRight"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "workbench.action.focusLastEditorGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "workbench.action.focusPreviousGroup",
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    // {
    //     "key": "ctrl+c ctrl+alt+5",
    //     "command": "workbench.action.moveEditorToPreviousGroup",
    //     "when": "activeEditorGroupLast"
    // },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup",
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+k end",
        "command": "workbench.action.splitEditorToLastGroup"
    },
    {
        "key": "ctrl+k end",
        "command": "workbench.action.splitEditorToFirstGroup",
        "when": "activeEditorGroupLast"
    },
    {
        "key": "alt+`",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    
    {
        "key": "f2",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "f1",
        "command": "editor.action.marker.prevInFiles",
        "when": "editorFocus"
    },
    {
        "key": "f1",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && !problemsVisibility"
    },
    {
        "key": "escape",
        "command": "workbench.action.closePanel",
        "when": "editorFocus && !modal.visual && panelVisible"
    },
    {
        "key": "escape",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    // {
    //     "key": "y",
    //     // "command": "clangd.switchheadersource",
    //     "command": "rahulvscodeplugin.headerSource",
    //     "when": "editorTextFocus && modal.normal"
    // },
    {
        "key": "g",
        "command": "rahulvscodeplugin.visualOFF",
        "when": "editorTextFocus && modal.normal && modal.visual"
    },
    {
        "key": "a s",
        "command": "surround.with",
        "when": "editorTextFocus && modal.normal"
    },
    {
        "key": "a u",
        "command": "rahulvscodeplugin.unwrap",
        "when": "editorTextFocus && modal.normal"
    },
    {
        "key": "a e",
        "command": "editor.action.showHover",
        "when": "editorTextFocus && modal.normal"
    },
    {
        "key": "a r",
        "command": "rahulvscodeplugin.replace",
        "when": "editorTextFocus && modal.normal"
    },

    {
        "key": "ctrl+shift+enter",
        "command": "editor.action.insertSnippet",
        "args": {
            "snippet": "\n{\n\t${1:}\n}"
        },
        "when": "editorTextFocus"
    },
    {
        "key": "tab",
        // "command": "simpleAutocomplete.next",
        "command": "postfixer.fix",
        // "command": "rahulvscodeplugin.tab",
        "when": "editorTextFocus && modal.insert && !editorHasSelection && !inSnippetMode"
    },
    {
        "key": "shift+tab",
        "command": "hippie-completion.prev",
        "when": "editorTextFocus && modal.insert && !editorHasSelection"
    },
    {
        "key": "shift+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.inlineSuggest.trigger",
        "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
        "key": "alt+\\",
        "command": "-editor.action.inlineSuggest.trigger",
        "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    // Run/Debug

    {
        "key": "f7",
        "command": "-cmake.build",
        "when": "cmake:enableFullFeatureSet && !cmake:hideBuildCommand"
    },
    {
        "key": "f7",
        "command": "cmake.launchTarget",
        "when": "cmake:enableFullFeatureSet && !cmake:hideDebugCommand && !inDebugMode"
    },
    {
        "key": "f7",
        "command": "python.execInTerminal-icon",
        "when": "editorLangId == python"
    },

    {
        "key": "f7",
        "command": "workbench.action.debug.run",
        "when": "editorLangId != python && !inDebugMode && !cmake:enableFullFeatureSet"
    },

    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "shift+f8",
        "command": "-editor.action.marker.prevInFiles",
        "when": "editorFocus"
    },


    {
        "key": "f8",
        "command": "python.debugInTerminal",
        "when": "editorLangId == python"
    },

    {
        "key": "f8",
        "command": "cmake.debugTarget",
        "when": "cmake:enableFullFeatureSet && inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
    },

    {
        "key": "f8",
        "command": "workbench.action.debug.start",
        // "when": "!inDebugMode && !inCMakeProject"
        "when": "editorLangId != python && !inDebugMode && !cmake:enableFullFeatureSet"

    },

    // {
    //     "key": "f8",
    //     "command": "workbench.action.debug.start",
    //     "when": "debuggersAvailable && debugState != 'initializing' && !inCMakeProject"
    // },


    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    // Build F4
    {
        "key": "f4",
        "command": "cmake.build",
        "when": "cmake:enableFullFeatureSet && !cmake:hideBuildCommand"
    },

    {
        "key": "f4",
        "command": "workbench.action.tasks.runTask",
        "args": "build",
        "when": "editorLangId == asm-collection"
    },
    {
        "key": "f4",
        "command": "python.execInTerminal-icon",
        "when": "editorLangId == python"
    },
    
    {
        "key": "f4",
        "command": "workbench.action.debug.start",
        "args": "JavaScript",
        "when": "editorLangId == javascript"

    },
    {
        "key": "f4",
        "command": "workbench.action.tasks.runTask",
        "args": "TypeScript",
        "when": "editorLangId == typescript"

    },

    {
        "key": "f4",
        "command": "workbench.action.tasks.runTask",
        "args": "C/C++: GCC Build",
        // "when": "editorLangId == c || editorLangId == cpp && !inCMakeProject"
        "when": "editorLangId != typescript && editorLangId != javascript && editorLangId != python && editorLangId != asm-collection && !cmake:enableFullFeatureSet"

    },


    {
        "key": "shift+f5",
        "command": "-cmake.launchTarget",
        "when": "cmake:enableFullFeatureSet && !cmake:hideDebugCommand && !inDebugMode"
    },
    
    // Debug mode controls
   
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    }, 
    {
        "key": "f5",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.stepOver",
        "when": "inDebugMode"
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.stepInto",
        "when": "inDebugMode"
    },
    {
        "key": "f10",
        "command": "workbench.action.debug.stepOut",
        "when": "inDebugMode"
    },
    {
        "key": "f11",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "f12",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "-cmake.debugTarget",
        "when": "cmake:enableFullFeatureSet && inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f6",
        "command": "editor.debug.action.selectionToWatch",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly && editorHasSelection"
    },
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly && editorHasSelection"
    },
    
    {
        "key": "ctrl+shift+`",
        "command": "editor.action.insertSnippet",
        "args": {"snippet": "`"},
        "when": "editorFocus"
    },
    {
        "key": "i",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "k",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },

    {
        "key": "ctrl+l",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },

/* 
    {
        "key": ".",
        "command": "editor.action.insertSnippet",
        "args": {"snippet": "."},
        "when": "editorFocus"
    },
 */







    
]